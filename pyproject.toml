[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "edge-containers-cli"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
description = "CLI for deploying and managing epics containers IOCs and services"

dependencies = [
    "natsort",
    "typer[all]",
    "requests",
    "ruamel.yaml",
    "jinja2",
    "polars-lts-cpu",
    "textual",
]

dynamic = ["version"]
license.file = "LICENSE"
readme = "README.md"
requires-python = ">=3.11"

[dependency-groups]
dev = [
    "build",
    "copier",
    "pipdeptree",
    "pre-commit",
    "pyright",
    "pytest>8.3.4",
    "pytest-cov",
    "pytest-mock",
    "ruff",
    "tox-uv",
    "twine",
    "types-mock",
    "uv~=0.7.0",
]

[project.scripts]
ec = "edge_containers_cli.__main__:main"

[project.urls]
GitHub = "https://github.com/epics-containers/edge-containers-cli"

[[project.authors]] # Further authors may be added by duplicating this section
email = "giles.knap@gmail.com"
name = "Giles Knap"

[tool.setuptools_scm]
version_file = "src/edge_containers_cli/_version.py"

[tool.pyright]
typeCheckingMode = "standard"
reportMissingImports = false  # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = [
    "error",
    "ignore::pytest_cov.plugin.CovDisabledWarning",
    "ignore:'autocompletion' is renamed to 'shell_complete'. The old name is deprecated and will be removed in Click 8.1. See the docs about 'Parameter' for information about new behavior.:DeprecationWarning:typer",
]
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "src tests"

[tool.coverage.run]
data_file = "/tmp/edge_containers_cli.coverage"
omit = ["src/edge_containers_cli/cmds/monitor.py"]

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

[tool.coverage.report]
omit = ["src/edge_containers_cli/cmds/monitor.py"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
skipsdist = true
requires = ["tox-uv>=1.25.0"]
# envs to runs automatically with tox -p
env_list = ["pre-commit", "type-checking", "docs"] # "tests"]

[tool.tox.env]
passenv = { "*" = "" }
# Include setuptools, pip, ... in the tox envs
uv_seed = { enabled = true }

[tool.tox.env.pre-commit]
description = "Run pre-commit"
allowlist_externals = ["pre-commit"]
commands = [
    [
        "pre-commit",
        "run",
        #"--all-files",
        "--show-diff-on-failure",
        { replace = "posargs", default = [], extend = true },
    ],
]

[tool.tox.env.type-checking]
description = "Run type-checking"
allowlist_externals = ["pyright"]
# needed otherwise throws reportUnknownMemberType errors
deps = ["pytest"]
commands = [
    [
        "pyright",
        "src",
        "tests",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.tests]
description = "Run tests"
allowlist_externals = ["pytest"]
commands = [
    [
        "pytest",
        "-vv",
        "--cov=edge_containers_cli",
        "--cov-report",
        "term",
        "--cov-report",
        "xml:cov.xml",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]


[tool.ruff]
src = ["src", "tests"]
line-length = 88
lint.ignore = [
    "C408",  # Unnecessary collection call - e.g. list(...) instead of [...]
    "E501",  # Line too long, should be fixed by black.
    "B008",  # Do not perform function calls in argument defaults.
    "UP007", # Do not complain about Optional[] (TODO: remove once typer is patched)
]
lint.select = [
    "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "SLF", # self - https://docs.astral.sh/ruff/settings/#lintflake8-self
]

[tool.ruff.lint.per-file-ignores]
# By default, private member access is allowed in tests
# See https://github.com/DiamondLightSource/python-copier-template/issues/154
# Remove this line to forbid private member access in tests
"tests/**/*" = ["SLF001"]
